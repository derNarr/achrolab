* Add "start measurement..." after clicking the button of the eye one
* devision by zero -- how to handle (catch and set value to None and give
  output to terminal?) [when mean and sd are calculated]
* ColorTable -- getColorByName(self, name)?
* ColorTable -- measureMonitor, measureTubes, findVoltgees as seperate
  functions
* seperate data from measurement functions
* implement iterativeColorTubes as class
* check voltages in iterativeColorTubes, should be always integer (not
        float)!!!
* save all measurements in RData file in ./data/measurements/
* is our code python3 compatible? (should be; test it!)
* with statement for file operations?
* write down wich conventions are used (README.txt)
* checkColorTable -- what should this method return?
    - list with differences from mean
* rename tubes.py to devtubes.py
* rename tubes2.py to tubes.py
* rename monitor2.py to monitor.py
* add method setVoltages in tubes.py (with "s" ;) )
* local minmas in findVoltagesTuning? How to handle?
* epsilon in findVoltagesTuning, run until differens is lower than epsilon?
* 10 bit of monitor, how to get psychopy work with all greys?
* docstrings -- use docstrings to generate documentation manual
* dummy for wasco
* capsulate wasco-driver in class?
* errorhandling in EyeOne
* remove every code from colormath and use for colorhandling onle tuples
* write small programm to measure monitor and draw figures
* generate analytical plots for tunging automatically
* write small tutorial
* patch_stim_values in colortable only saves one scalar, change to three
    values to save rgb-colors
* output files should be in a good folder structure
* save in output files calibration files
* configuration file?
* make software os independant
* change code to relative imports
* adaptive stepsize in tuning algorithm
* vary stepsize of steps in second step of tuning algorithm
* document the tuning and the findVoltages algorithm (and norm and diff...)

